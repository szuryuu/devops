---
- name: DevOps
  hosts: localhost
  become: true

  vars:
    # Clean Path
    project_directory: "{{ (playbook_dir ~ '/../..') | realpath }}"

  tasks:
    - name: EDIT HOSTS
      blockinfile:
        path: /etc/hosts
        state: present
        content: |
          127.0.0.1 app.local api.local static.local

    # - name: RUNNING CREATE USER,
    #   ansible.builtin.shell: |
    #     bash ../../linux-admin/scripts/create_user.sh

    - name: GET GID
      ansible.builtin.shell: |
        getent group testusers | cut -d: -f3
      register: testusers_gid
      failed_when: testusers_gid.rc != 0

    - name: SET GID
      set_fact:
        testusers_gid_value: "{{ testusers_gid.stdout }}"

    - name: DEBUG GID
      debug:
        msg: "testusers GID: {{ testusers_gid_value }}"

    - name: DOWN DOCKER COMPOSE
      community.docker.docker_compose_v2:
        project_src: "{{ project_directory }}"
        state: absent
      environment:
        TESTUSERS_GID: "{{ testusers_gid_value }}"

    - name: BUILD DOCKER COMPOSE
      community.docker.docker_compose_v2:
        project_src: "{{ project_directory }}"
        build: "always"
        state: present
      environment:
        TESTUSERS_GID: "{{ testusers_gid_value }}"

    - name: CREATE ENVIRONMENT FILE FOR SYSTEMD
      copy:
        content: "TESTUSERS_GID={{ testusers_gid_value }}"
        dest: /etc/devops-app.env
        mode: "0644"

    - name: COPY SYSTEMD SERVICE FILE
      template:
        src: "{{ project_directory }}/systemd/devops-app.service.j2"
        dest: /etc/systemd/system/devops-app.service
        mode: 0644

    - name: START HTTP SERVER SERVICE
      systemd:
        name: devops-app.service
        state: restarted
        enabled: yes
        daemon_reload: yes
