server {
    listen 80;
    listen [::]:80;
    server_name static.local static.example.com;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name static.local static.example.com;

    limit_req zone=global burst=20 nodelay;
    limit_conn connections 10;

    ssl_certificate /etc/nginx/ssl/certs/server.crt;
    ssl_certificate_key /etc/nginx/ssl/certs/server.key;

    root /usr/share/nginx/html;
    index index.html index.htm;
    
    location /images/ {
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;
        
        expires 30d;
        add_header Cache-Control "public, immutable";
        
        location ~* /images/.*\.(jpg|jpeg|png)$ {
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
    }

    location /videos/ {
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;
        
        expires 7d;
        add_header Cache-Control "public";
        
        location ~* /videos/.*\.(mp4)$ {
            expires 7d;
            add_header Cache-Control "public";
            add_header Accept-Ranges bytes;
        }
    }

    location /audio/ {
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;
        
        expires 7d;
        add_header Cache-Control "public";
        
        location ~* /audio/.*\.(mp3|wav|ogg|m4a|aac|flac)$ {
            expires 7d;
            add_header Cache-Control "public";
            add_header Accept-Ranges bytes;
        }
    }
    
    location / {
        try_files $uri $uri/ =404;
        
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
    }

    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}
